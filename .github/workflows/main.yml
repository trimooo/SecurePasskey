name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npx tsc --noEmit
    - run: npm run build
    - uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: dist/

  create-release:
    needs: [build]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: '20.x'
    - uses: actions/setup-java@v4
      with:
        distribution: 'adopt'
        java-version: '17'
    - name: Install Android SDK
      uses: android-actions/setup-android@v3
    - run: npm ci
    - name: Build Android
      run: |
        npm run cap:add
        cd android
        ./gradlew assembleRelease
    - name: Build Windows
      run: npm run electron:build
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          android/app/build/outputs/apk/release/app-release.apk
          dist/SecurePasskey.exe
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Run TypeScript check
      run: npx tsc --noEmit

  database:
    runs-on: ubuntu-latest
    needs: [build, lint]
    if: github.ref == 'refs/heads/main'
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Run database migrations
      run: npm run db:push

  deploy:
    runs-on: ubuntu-latest
    needs: [database]
    if: github.ref == 'refs/heads/main'
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      NODE_ENV: production
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-files
    - name: Deploy to production
      run: echo "Deployment would happen here. Configure with your hosting provider."